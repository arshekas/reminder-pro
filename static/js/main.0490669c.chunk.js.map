{"version":3,"sources":["constants.js","components/App.jsx","actions/index.js","reducers/index.js","index.js"],"names":["ADD_REMINDER","DELETE_REMINDER","CLEAR_REMINDER","App","props","state","text","dueDate","console","log","this","addReminder","id","deleteReminder","reminders","className","map","reminder","moment","Date","fromNow","onClick","placeholder","onChange","event","setState","target","value","onKeyPress","key","preventDefault","type","renderReminders","clearReminders","Component","connect","action","Math","random","removeById","filter","read_cookie","bake_cookie","store","createStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"sOAAaA,EAAe,eACfC,EAAkB,kBAClBC,EAAiB,iB,gCCIxBC,E,kDAEF,WAAYC,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,QAAS,IAJjB,E,+CAQA,WAEIC,QAAQC,IAAIC,KAAKL,MAAME,SACvBG,KAAKN,MAAMO,YAAYD,KAAKL,MAAMC,KAAMI,KAAKL,MAAME,W,4BAEvD,SAAeK,GAEXF,KAAKN,MAAMS,eAAeD,K,6BAE9B,WACC,IAAD,OACYE,EAAcJ,KAAKN,MAAnBU,UACR,OACI,oBAAIC,UAAU,uBAAd,SAEQD,EAAUE,KAAI,SAAAC,GACV,OACI,qBAAsBF,UAAU,kBAAhC,UACI,sBAAKA,UAAU,YAAf,UACI,8BAAME,EAASX,OACf,8BAAK,6BAAKY,IAAO,IAAIC,KAAKF,EAASV,UAAUa,iBAEjD,qBAAKL,UAAU,0BACXM,QAAS,kBAAM,EAAKR,eAAeI,EAASL,KADhD,sBALKK,EAASL,W,oBAgB1C,WACC,IAAD,OACI,OACI,sBAAKG,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,0BAGA,sBAAKA,UAAU,4BAAf,UACI,sBAAKA,UAAU,aAAf,UACI,uBACAA,UAAU,eACVO,YAAY,eACZC,SAAU,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAACnB,KAAMkB,EAAME,OAAOC,SACrDC,WAAY,SAAAJ,GACS,UAAdA,EAAMK,MAELL,EAAMM,iBACN,EAAKnB,kBAIb,uBACAI,UAAW,eACXgB,KAAM,iBACNR,SAAU,SAAAC,GAAK,OAAI,EAAKC,SAAS,CAAClB,QAASiB,EAAME,OAAOC,cAG5D,wBACAI,KAAK,SACLhB,UAAU,kBACVM,QAAS,kBAAM,EAAKV,eAHpB,6BAOFD,KAAKsB,kBACP,qBACIjB,UAAU,iBACVM,QAAS,kBAAK,EAAKjB,MAAM6B,kBAF7B,oC,GA/EEC,aA+FHC,mBANf,SAAyB9B,GAErB,MAAM,CACFS,UAAWT,KAGqB,CAACM,YClGd,SAACL,EAAMC,GAM9B,MALe,CACXwB,KAAM/B,EACNM,OACAC,YD8F8CM,eCzFxB,SAACD,GAM3B,MAJe,CACXmB,KAAM9B,EACNW,ODqF8DqB,eChFxC,WAE1B,MAAO,CACHF,KAAM7B,KD6ECiC,CAAyEhC,G,sBElGlFc,EAAW,SAACmB,GAAU,IAClB9B,EAAkB8B,EAAlB9B,KAAMC,EAAY6B,EAAZ7B,QACZ,MAAO,CACHK,GAAIyB,KAAKC,SACThC,OACAC,YAGFgC,EAAa,WAAqB,IAApBlC,EAAmB,uDAAX,GAAIO,EAAO,uCAC7BE,EAAYT,EAAMmC,QAAO,SAAAvB,GAAQ,OAAIA,EAASL,KAAOA,KAC3D,OAAOE,GAuBIA,EArBG,WAAuB,IAAtBT,EAAqB,uDAAd,GAAI+B,EAAU,uCAChCtB,EAAY,KAEhB,OADAT,EAAQoC,sBAAY,aACbL,EAAOL,MAEV,KAAK/B,EAGD,OAFAc,EAAS,sBAAOT,GAAP,CAAcY,EAASmB,KAChCM,sBAAY,YAAa5B,GAClBA,EACX,KAAKb,EAGD,OAFAa,EAAYyB,EAAWlC,EAAO+B,EAAOxB,IACrC8B,sBAAY,YAAa5B,GAClBA,EACX,KAAKZ,EAGD,OAFAY,EAAY,GACZ4B,sBAAY,YAAa5B,GAClBA,EACX,QACI,OAAOT,ICzBbsC,G,MAAQC,YAAYC,IAE1BC,IAASC,OACL,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACI,cAAC,EAAD,MACSK,SAASC,eAAe,W","file":"static/js/main.0490669c.chunk.js","sourcesContent":["export const ADD_REMINDER = 'ADD_REMINDER';\r\nexport const DELETE_REMINDER = 'DELETE_REMINDER';\r\nexport const CLEAR_REMINDER = 'CLEAR_REMINDER';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addReminder, deleteReminder, clearReminders } from '../actions';\r\nimport moment from 'moment';\r\nimport './App.css'\r\n\r\nclass App extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = { \r\n            text: '',\r\n            dueDate: ''\r\n        }\r\n    }\r\n\r\n    addReminder()\r\n    {\r\n        console.log(this.state.dueDate);        \r\n        this.props.addReminder(this.state.text, this.state.dueDate);\r\n    }\r\n    deleteReminder(id)\r\n    {\r\n        this.props.deleteReminder(id);\r\n    }\r\n    renderReminders()\r\n    {\r\n        const { reminders } = this.props;\r\n        return (\r\n            <ul className=\"list-groups col-sm-4\">\r\n                {\r\n                    reminders.map(reminder => {\r\n                        return(\r\n                            <li key={reminder.id} className=\"list-group-item\">\r\n                                <div className=\"list-item\">\r\n                                    <div>{reminder.text}</div>\r\n                                    <div><em>{moment(new Date(reminder.dueDate)).fromNow()}</em></div>\r\n                                </div>\r\n                                <div className=\"list-item delete-button\"\r\n                                    onClick={() => this.deleteReminder(reminder.id)}>\r\n                                    &#x2715;\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"App\">\r\n                <div className=\"title\">\r\n                    Reminder Pro\r\n                </div>\r\n                <div className=\"form-inline reminder-form\">\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                        className=\"form-control\"\r\n                        placeholder=\"I have to...\"\r\n                        onChange={event => this.setState({text: event.target.value})}\r\n                        onKeyPress={event =>{\r\n                            if(event.key === 'Enter')\r\n                            {\r\n                                event.preventDefault();\r\n                                this.addReminder();\r\n                            }\r\n                        }}>\r\n                        </input>\r\n                        <input\r\n                        className =\"form-control\"\r\n                        type =\"datetime-local\"\r\n                        onChange={event => this.setState({dueDate: event.target.value})}\r\n                        />\r\n                    </div>\r\n                    <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-success\"\r\n                    onClick={() => this.addReminder()}>\r\n                        Add Reminder\r\n                    </button>\r\n                </div>\r\n                { this.renderReminders() }\r\n                <div \r\n                    className=\"btn btn-danger\"\r\n                    onClick={() =>this.props.clearReminders()}>\r\n                    Clear Reminders\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state)\r\n{\r\n    return{\r\n        reminders: state\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {addReminder, deleteReminder, clearReminders}) (App);","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDER } from '../constants';\r\n\r\n\r\nexport const addReminder = (text, dueDate) => {\r\n    const action = {\r\n        type: ADD_REMINDER,\r\n        text,\r\n        dueDate\r\n    }\r\n    return action;\r\n}\r\n\r\nexport const deleteReminder = (id) =>\r\n{\r\n    const action = {\r\n        type: DELETE_REMINDER,\r\n        id\r\n    }\r\n    return action;\r\n}\r\n\r\nexport const clearReminders = () =>\r\n{\r\n    return {\r\n        type: CLEAR_REMINDER\r\n    }\r\n}","import { ADD_REMINDER, DELETE_REMINDER, CLEAR_REMINDER } from '../constants';\r\nimport { bake_cookie, read_cookie } from 'sfcookies';\r\n\r\nconst reminder = (action)=>{\r\n    let { text, dueDate } = action;\r\n    return {\r\n        id: Math.random(),\r\n        text,\r\n        dueDate\r\n    }\r\n}\r\nconst removeById = (state = [], id) => {\r\n    const reminders = state.filter(reminder => reminder.id !== id);\r\n    return reminders;\r\n}\r\nconst reminders = (state =[], action) =>{\r\n    let reminders = null;\r\n    state = read_cookie('reminders');\r\n    switch(action.type)\r\n    {\r\n        case ADD_REMINDER:\r\n            reminders = [...state, reminder(action)];\r\n            bake_cookie('reminders', reminders);\r\n            return reminders;\r\n        case DELETE_REMINDER:\r\n            reminders = removeById(state, action.id);\r\n            bake_cookie('reminders', reminders);\r\n            return reminders;\r\n        case CLEAR_REMINDER:\r\n            reminders = [];\r\n            bake_cookie('reminders', reminders);\r\n            return reminders;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reminders;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducer from './reducers';\r\nimport './index.css';\r\n\r\nconst store = createStore(reducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('root')\r\n)"],"sourceRoot":""}